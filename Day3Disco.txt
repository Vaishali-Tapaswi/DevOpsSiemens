Lab 1 - GitLab Web
  Group -> Create group
  Project -> new project in group
    Repo -> initialize with readme
    Create Pipeline -> editor 
      Observe -> stages / Jobs -> Run -> Monitor (Jobs -> Console -> Docker Container)

Lab 2 - in same project
  Create .java file -> helloworld
  Modify pipleline to compile code and run the same
       HelloWorld.java
         public class HelloWorld{
          public static void main(String[] args){
              System.out.println("Hello World 1.0!!!");
          }
         }
    compile 
      javac HelloWorld.java
    run
      java HelloWorld
   Observe Error for java 
   ------------> modify pipeline/job to include image
       build-job:       # This job runs in the build stage, which runs first.
         image: java:8

 Lab 3 - Compile in one java and run in other 
      observe error for wrong image and HelloWorld.class not found
      Image error -> defining image for test-job
      Class Not found error -> adding artifacts
      Create issue -> assign to yourself, check todo list 
 
--------------------------
 build-job:       # This job runs in the build stage, which runs first.
  image: java:8
  stage: build
  script:
    - echo "Compiling the code..."
    - cat HelloWorld.java
    - javac HelloWorld.java
    - java HelloWorld
    - echo "Compile complete."
  artifacts:
    untracked: false
    expire_in: 30 days
    paths: 
      - HelloWorld.class
--------------------------

 Lab 4 - Variables 
  1. Declared in yml file
    
      build-job:       # This job runs in the build stage, which runs first.
        stage: build
        variables:
           USERNAME: "...."

  use  => echo "$USERNAME, $CI_PROJECT_DIR
2. Declared in project config/settings
  settings-> ci/cd -> variables -> new variable -> 1. just protected 2. Masked 3. combination
    create passsword variable and print 

Lab 5- GitLab runner configuration
