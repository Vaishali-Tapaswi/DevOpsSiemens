Build Tools 
	https://mindmajix.com/12-open-source-devops-build-tools
	https://www.softwaretestinghelp.com/tools/top-40-static-code-analysis-tools/
-------------
Lab 2 - Configure SonarQube in Maven
	Modify pom file to include dependencies
		<dependency>
			<groupId>org.sonarsource.scanner.maven</groupId>
			<artifactId>sonar-maven-plugin</artifactId>
			<version>3.2</version>
		</dependency>
	add profiles after dependencies
		<profiles>
			<profile>
				<id>sonar</id>
				<activation>
					<activeByDefault>true</activeByDefault>
				</activation>
				<properties>
					<!-- Optional URL to server. Default value is http://localhost:9000 -->
					<sonar.host.url>
						http://localhost:9000
					</sonar.host.url>
				</properties>
			</profile>
		</profiles>
	
	run maven as sonar:sonar (assuming sonar server is running on localhost:9000)
		
Lab 1 - Maven
	Eclipse -> new Workspace -> window -> preferences -> compiler/ installedJRE(jdk)
	new Maven Project -> G(Day1) A(Day1.demo1) V(0.0.01..)
	Create a new class (demo.Calc)
		package demo;

		public class Calc {

			public int add(int i, int j ) {
				return i+j;
			}
			public int divide(String str1, String str2) {
				int  i = Integer.parseInt(str1);
				int  j = Integer.parseInt(str2);
				return i/j;
			}
			public static void main(String[] args) {
				Calc c = new Calc();
				System.out.println(c.add(20,400));
				System.out.println(c.divide("100","10"));
				System.out.println(c.divide("100","0"));
			}
		}

	Run ->maven build -> clean  install package

-----------------------
Point 1 - 
  Applications
    1. Rich Client -> 
    2. Thin Client -> Web Applications
      Browser+Network
        Round Trip (Sync)
    3. Rich Internet Applications (RIA)
  --------------------------------------------
  Applications
    Thin Clients / RIA
    Client -----------> Web Server ------------Business Logic------------Persistent/Integration --->Databse
    Browser 			Servlet/JSP				EJB / JavaBeans				JDBC / Hibernate/JPA

              Presentation			BL Layer					Integration Layer
              Layer
  -----------------------------------------
  Service 
      Small Service (Micro Services)

    Monolith ------->Micro Services
----------------------------------------
Point2 -
Monolith --------------> Micro Services
						Scalability + (Uber)
Single Hosting
						5/10 Micro Services
						Monitor -> all 5 services are started, running, network
						Devlopment -> Interface, single change-> compiled, tested, deployed
						
						Requirement -> Automation (Tools)
						
						DevOps -> 
						
Devlopment->Deployment->Administration



Point 3 - DevOps 
	https://www.atlassian.com/devops/devops-tools
Read/Refer
  https://martinfowler.com/articles/microservices.html
  https://redwerk.com/wp-content/uploads/2020/04/pic2.png
  https://perfectial.com/wp-content/uploads/2021/05/ms-monolithic.png  

Point 4 - Virtualization
	https://documentation.suse.com/smart/linux/html/concept-virtualization/images/virtualization-schema.png
	https://www.oracle.com/assets/oracle-vm-virtualbox-overview-2981353.pdf
	Related Concepts
		Containerization (Docker)
		Infrastructure as Code 
		ex - > Vagrant / Terraform
